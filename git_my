See What Branch You're On
git status
List All Branches. The current local branch will be marked with an asterisk (*).
To see local branches
git branch
To see remote branches
git branch -r
To see all local and remote branches, run this command:
git branch -a
Create a New Branch
git checkout -b my-branch-name
Switch to a Branch In Your Local Repo
git checkout my-branch-name

Switch to a Branch That Came From a Remote Repo
To get a list of all branches from the remote, run this command:
git pull
Run this command to switch to the branch:
git checkout --track origin/my-branch-name
Push to a Branch
If your local branch does not exist on the remote, run either of these commands:
git push -u origin my-branch-name
git push -u origin HEAD
NOTE: HEAD is a reference to the top of the current branch, so it's an easy way to push to a branch of the same name on the remote. This saves you from having to type out the exact name of the branch!

https://www.nobledesktop.com/learn/git/git-branches
If your local branch already exists on the remote, run this command:
git push
Merge a Branch
You'll want to make sure your working tree is clean and see what branch you're on. Run this command:
git status
First, you must check out the branch that you want to merge another branch into (changes will be merged into this branch). If you're not already on the desired branch, run this command:
git checkout master
NOTE: Replace master with another branch name as needed.
Now you can merge another branch into the current branch. Run this command:
git merge my-branch-name
NOTE: When you merge, there may be a conflict. Refer to Handling Merge Conflicts (the next exercise) to learn what to do.
Delete Branches
To delete a remote branch, run this command:
git push origin --delete my-branch-name
To delete a local branch, run either of these commands:
git branch -d my-branch-name
git branch -D my-branch-name
NOTE: The -d option only deletes the branch if it has already been merged. The -D option is a shortcut for --delete --force, which deletes the branch irrespective of its merged status.


https://stackoverflow.com/questions/9529078/how-do-i-use-git-reset-hard-head-to-revert-to-a-previous-commit
git reset --hard <SOME-COMMIT>
Відкотитись до даного коміту

https://stackoverflow.com/questions/9834689/comparing-two-branches-in-git
Comparing two branches
git diff branch_1..branch_2

rename git branch locally and remotely
git branch -m old_branch new_branch         # Rename branch locally    
git push origin :old_branch                 # Delete the old branch    
git push --set-upstream origin new_branch   # Push the new branch, set local branch to track the new remote

 